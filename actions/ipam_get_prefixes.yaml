---
name: ipam_get_prefixes
pack: netbox
runner_type: "python-script"
description: Get prefixes from NetBox
enabled: true
entry_point: base_get_action.py
parameters:
  endpoint_uri:
    immutable: true
    default: /api/ipam/prefixes/
  family:
    type: string
    description: Prefix family
  q:
    type: string
    description: Prefix query
  parent:
    type: string
    description: Parent prefix
  mask_length:
    type: integer
    description: Subnet mask length (CIDR bits)
  vrf_id:
    type: integer
    description: ID of the VRF
  vrf:
    type: string
    description: Name of the VRF
  tenant_id:
    type: integer
    description: ID of the Tenant
  tenant:
    type: string
    description: Name of the Tenant
  site_id:
    type: integer
    description: ID of the SIte
  site:
    type: string
    description: Name of the Site
  vlan_id:
    type: integer
    description: ID of the VLAN
  vlan_vid:
    type: integer
    description: VLAN ID number (VID)
  role_id:
    type: integer
    description: ID of the Role
  role:
    type: string
    description: Name of the Role
  status:
    type: string
    description: Status of the IP Address
  id__in:
    type: array
    description: List of IP Address IDs
  limit:
    type: integer
    default: 50
    description: Max limit of objects to return from the request.
  offset:
    type: integer
    default: 0
    description: Offset result set by X objects. Used for pagination.
  save_in_key_store:
    type: boolean
    default: false
    description: Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.
  save_in_key_store_key_name:
    type: string
    description: Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.
  save_in_key_store_ttl:
    type: integer
    default: 60
    description: TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.

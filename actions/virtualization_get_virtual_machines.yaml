---
name: virtualization_get_virtual_machines
pack: netbox
runner_type: "python-script"
description: Get virtual machine(s) from NetBox
enabled: true
entry_point: base_get_action.py
parameters:
  endpoint_uri:
    immutable: true
    default: /api/virtualization/virtual-machines/
  id:
    type: integer
    description: "If provided, will convert to using the detail route. I.e., <endpoint_uri>/<id>/, meaning a max of one entity will be returned and all other entity query parameters will be ignored."
  name:
    type: string
    description: Name of the inteface
  id__in:
    type: array
    description: List of Cluster IDs
  q:
    type: string
    description: Cluster query
  cluster:
    type: string
    description: Name of the Cluster
  cluster_id:
    type: integer
    description: ID of the Cluster
  cluster_group:
    type: string
    description: Name of the Cluster Group
  cluster_group_id:
    type: integer
    description: ID of the Cluster Group
  role:
    type: string
    description: Name of the Role
  role_id:
    type: integer
    description: ID of the Role
  tenant:
    type: string
    description: Name of the Tenant
  tenant_id:
    type: integer
    description: ID of the Tenant
  platform:
    type: string
    description: Name of the Platform
  platform_id:
    type: integer
    description: ID of the Platform
  status:
    type: string
    description: Status of the Virtual Machine
  limit:
    type: integer
    default: 50
    description: Max limit of objects to return from the request.
  offset:
    type: integer
    default: 0
    description: Offset result set by X objects. Used for pagination.
  save_in_key_store:
    type: boolean
    default: false
    description: Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.
  save_in_key_store_key_name:
    type: string
    description: Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.
  save_in_key_store_ttl:
    type: integer
    default: 60
    description: TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.

# This action was auto generated from the NetBox API Swagger Spec
# NetBox API version: 3.6.9
description: "Get a list of cable objects."
enabled: true
entry_point: run.py
name: get.dcim.cables
parameters:
  endpoint_uri:
    default: "/dcim/cables/"
    immutable: true
    type: string
  http_verb:
    default: get
    immutable: true
    type: string
  get_detail_route_eligible:
    default: true
    immutable: true
    type: boolean
  color:
    required: 
    type: 
    description: "Color"
  color__n:
    required: 
    type: 
    description: "Color not equal to"
  created:
    required: 
    type: 
    description: "Created"
  created__empty:
    required: 
    type: 
    description: "Created is empty/null (boolean)"
  created__gt:
    required: 
    type: 
    description: "Created greater than"
  created__gte:
    required: 
    type: 
    description: "Created greater than or equal to"
  created__lt:
    required: 
    type: 
    description: "Created less than"
  created__lte:
    required: 
    type: 
    description: "Created less than or equal to"
  created__n:
    required: 
    type: 
    description: "Created not equal to"
  created_by_request:
    required: 
    type: 
    description: "Created_by_request"
  description:
    required: 
    type: 
    description: "Description"
  description__empty:
    required: 
    type: 
    description: "Description is empty/null (boolean)"
  description__ic:
    required: 
    type: 
    description: "Description contains (case-insensitive)"
  description__ie:
    required: 
    type: 
    description: "Description exact match (case-insensitive)"
  description__iew:
    required: 
    type: 
    description: "Description ends with (case-insensitive)"
  description__isw:
    required: 
    type: 
    description: "Description starts with (case-sensitive)"
  description__n:
    required: 
    type: 
    description: "Description not equal to"
  description__nic:
    required: 
    type: 
    description: "Description does not contain (case-insensitive)"
  description__nie:
    required: 
    type: 
    description: "Description inverse exact match (case-insensitive)"
  description__niew:
    required: 
    type: 
    description: "Description does not end with (case-insensitive)"
  description__nisw:
    required: 
    type: 
    description: "Description does not start with (case-sensitive)"
  device:
    required: 
    type: 
    description: "Device"
  device_id:
    required: 
    type: 
    description: "Device_id"
  id:
    required: 
    type: 
    description: "Id"
  id__empty:
    required: 
    type: 
    description: "Id is empty/null (boolean)"
  id__gt:
    required: 
    type: 
    description: "Id greater than"
  id__gte:
    required: 
    type: 
    description: "Id greater than or equal to"
  id__lt:
    required: 
    type: 
    description: "Id less than"
  id__lte:
    required: 
    type: 
    description: "Id less than or equal to"
  id__n:
    required: 
    type: 
    description: "Id not equal to"
  label:
    required: 
    type: 
    description: "Label"
  label__empty:
    required: 
    type: 
    description: "Label is empty/null (boolean)"
  label__ic:
    required: 
    type: 
    description: "Label contains (case-insensitive)"
  label__ie:
    required: 
    type: 
    description: "Label exact match (case-insensitive)"
  label__iew:
    required: 
    type: 
    description: "Label ends with (case-insensitive)"
  label__isw:
    required: 
    type: 
    description: "Label starts with (case-sensitive)"
  label__n:
    required: 
    type: 
    description: "Label not equal to"
  label__nic:
    required: 
    type: 
    description: "Label does not contain (case-insensitive)"
  label__nie:
    required: 
    type: 
    description: "Label inverse exact match (case-insensitive)"
  label__niew:
    required: 
    type: 
    description: "Label does not end with (case-insensitive)"
  label__nisw:
    required: 
    type: 
    description: "Label does not start with (case-sensitive)"
  last_updated:
    required: 
    type: 
    description: "Last_updated"
  last_updated__empty:
    required: 
    type: 
    description: "Last_updated is empty/null (boolean)"
  last_updated__gt:
    required: 
    type: 
    description: "Last_updated greater than"
  last_updated__gte:
    required: 
    type: 
    description: "Last_updated greater than or equal to"
  last_updated__lt:
    required: 
    type: 
    description: "Last_updated less than"
  last_updated__lte:
    required: 
    type: 
    description: "Last_updated less than or equal to"
  last_updated__n:
    required: 
    type: 
    description: "Last_updated not equal to"
  length:
    required: 
    type: 
    description: "Length"
  length__empty:
    required: 
    type: 
    description: "Length is empty/null (boolean)"
  length__gt:
    required: 
    type: 
    description: "Length greater than"
  length__gte:
    required: 
    type: 
    description: "Length greater than or equal to"
  length__lt:
    required: 
    type: 
    description: "Length less than"
  length__lte:
    required: 
    type: 
    description: "Length less than or equal to"
  length__n:
    required: 
    type: 
    description: "Length not equal to"
  length_unit:
    required: 
    type: 
    description: "Length_unit"
  length_unit__n:
    required: 
    type: 
    description: "Length_unit not equal to"
  limit:
    required: false
    type: 
    description: "Number of results to return per page."
  location:
    required: 
    type: 
    description: "Location"
  location_id:
    required: 
    type: 
    description: "Location_id"
  modified_by_request:
    required: 
    type: 
    description: "Modified_by_request"
  offset:
    required: false
    type: 
    description: "The initial index from which to return the results."
  ordering:
    required: false
    type: 
    description: "Which field to use when ordering the results."
  q:
    required: 
    type: 
    description: "Search"
  rack:
    required: 
    type: 
    description: "Rack"
  rack_id:
    required: 
    type: 
    description: "Rack_id"
  site:
    required: 
    type: 
    description: "Site"
  site_id:
    required: 
    type: 
    description: "Site_id"
  status:
    required: 
    type: 
    description: "Status"
  status__n:
    required: 
    type: 
    description: "Status not equal to"
  tag:
    required: 
    type: 
    description: "Tag"
  tag__n:
    required: 
    type: 
    description: "Tag not equal to"
  tenant:
    required: 
    type: 
    description: "Tenant (slug)"
  tenant__n:
    required: 
    type: 
    description: "Tenant not equal to"
  tenant_group:
    required: 
    type: 
    description: "Tenant Group (slug)"
  tenant_group__n:
    required: 
    type: 
    description: "Tenant_group not equal to"
  tenant_group_id:
    required: 
    type: 
    description: "Tenant Group (ID)"
  tenant_group_id__n:
    required: 
    type: 
    description: "Tenant_group_id not equal to"
  tenant_id:
    required: 
    type: 
    description: "Tenant (ID)"
  tenant_id__n:
    required: 
    type: 
    description: "Tenant_id not equal to"
  termination_a_id:
    required: 
    type: 
    description: "Termination_a_id"
  termination_a_type:
    required: 
    type: 
    description: "Termination_a_type"
  termination_a_type__n:
    required: 
    type: 
    description: "Termination_a_type not equal to"
  termination_b_id:
    required: 
    type: 
    description: "Termination_b_id"
  termination_b_type:
    required: 
    type: 
    description: "Termination_b_type"
  termination_b_type__n:
    required: 
    type: 
    description: "Termination_b_type not equal to"
  type:
    required: 
    type: 
    description: "Type"
  type__n:
    required: 
    type: 
    description: "Type not equal to"
  unterminated:
    required: 
    type: 
    description: "Unterminated"
  updated_by_request:
    required: 
    type: 
    description: "Updated_by_request"
  save_in_key_store:
    type: boolean
    default: false
    description: Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.
  save_in_key_store_key_name:
    type: string
    description: Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.
  save_in_key_store_ttl:
    type: integer
    default: 60
    description: TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.
runner_type: python-script
